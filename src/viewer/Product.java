/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer;

import com.Messages;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.db;

/**
 *
 * @author LasithaRanawaka
 */
public class Product extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    public Product() {
        initComponents();
        txt_CostPrice.setText("0.0");
        txt_SellPrice.setText("0.0");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_Product = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_Id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_Name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txt_CostPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txt_SellPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmb_Status = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Products");

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        tbl_Product.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Name", "Cost Price", "Selling Price", "Item Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_Product.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_ProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_Product);

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Item ID");

        txt_Id.setEditable(false);

        jLabel3.setText("Item Name");

        txt_Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_NameKeyPressed(evt);
            }
        });

        jLabel4.setText("Cost Price");

        txt_CostPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CostPriceActionPerformed(evt);
            }
        });
        txt_CostPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_CostPriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_CostPriceKeyReleased(evt);
            }
        });

        jLabel5.setText("Selling Price");

        txt_SellPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_SellPriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_SellPriceKeyReleased(evt);
            }
        });

        jLabel6.setText("Item Status");

        cmb_Status.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Deactive" }));
        cmb_Status.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmb_StatusKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_CostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_SellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmb_Status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txt_CostPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txt_SellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cmb_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 961, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_ProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_ProductMouseClicked
    }//GEN-LAST:event_tbl_ProductMouseClicked

    private void txt_NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_NameKeyPressed
        if (evt.getKeyCode() == 10) {
            txt_CostPrice.grabFocus();
            txt_CostPrice.selectAll();
        }
    }//GEN-LAST:event_txt_NameKeyPressed

    private void txt_CostPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CostPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CostPriceActionPerformed

    private void txt_CostPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CostPriceKeyPressed
        if (evt.getKeyCode() == 10) {
            txt_SellPrice.grabFocus();
        }
    }//GEN-LAST:event_txt_CostPriceKeyPressed

    private void txt_CostPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_CostPriceKeyReleased
        com.Validation.validatedouble(txt_CostPrice);
    }//GEN-LAST:event_txt_CostPriceKeyReleased

    private void txt_SellPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SellPriceKeyPressed
        if (evt.getKeyCode() == 10) {
            cmb_Status.grabFocus();
            txt_SellPrice.selectAll();
        }
    }//GEN-LAST:event_txt_SellPriceKeyPressed

    private void txt_SellPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_SellPriceKeyReleased
        com.Validation.validatedouble(txt_SellPrice);
    }//GEN-LAST:event_txt_SellPriceKeyReleased

    private void cmb_StatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_StatusKeyPressed
        SaveAndUpdate();
    }//GEN-LAST:event_cmb_StatusKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        SaveAndUpdate();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmb_Status;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_Product;
    private javax.swing.JTextField txt_CostPrice;
    private javax.swing.JTextField txt_Id;
    private javax.swing.JTextField txt_Name;
    private javax.swing.JTextField txt_SellPrice;
    // End of variables declaration//GEN-END:variables
    boolean a;

    private void txtempty() {
        if (txt_Name.getText().trim().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Enter Product Name");
            a = true;
            txt_Name.grabFocus();

        } else {
            a = false;
        }
    }

    private void AddProductDetails() {
        int Active = cmb_Status.getSelectedIndex();

        if (txt_Id.getText().isEmpty()) {

            try {
                db.change("insert into items(name,cost,sell,status) "
                        + "value('" + txt_Name.getText() + "','" + txt_CostPrice.getText() + "','" + txt_SellPrice.getText() + "','" + Active + "')");

            } catch (Exception e) {
                e.printStackTrace();
            }
            Messages.datasaved();
            cleartext();
            txt_Name.grabFocus();
            loadtable();
        } else {
            try {
                db.change("update  items set name= '" + txt_Name.getText() + "',"
                        + "cost='" + txt_CostPrice.getText() + "',"
                        + "sell='" + txt_SellPrice.getText() + "',status='" + Active + "' "
                        + " where id='" + txt_Id.getText() + "'");

            } catch (Exception e) {
                e.printStackTrace();
            }
            Messages.dataupdated();
            cleartext();

            txt_Name.grabFocus();
            loadtable();
        }
    }

    private void cleartext() {
        txt_Id.setText("");
        txt_Name.setText("");
        txt_CostPrice.setText("0.0");
        txt_SellPrice.setText("0.0");

    }

    private void loadtable() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tbl_Product.getModel();
            ResultSet rs = db.fetch("SELECT\n"
                    + "product.id,\n"
                    + "product.`name`,\n"
                    + "product.cost,\n"
                    + "product.sell,\n"
                    + "product.`status`\n"
                    + "FROM\n"
                    + "product\n"
                    + "ORDER BY\n"
                    + "product.id ASC");

            dtm.setRowCount(rs.getRow());
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                double costPrice = rs.getDouble(3);
                double sellprice = rs.getDouble(4);

                int status = rs.getInt(5);
                String sta = null;
                if (status == 0) {
                    sta = "Active";
                } else if (status == 1) {
                    sta = "Deactive";

                }

                Object[] ar = {id, name, costPrice, sellprice, sta};
                dtm.addRow(ar);
            }

        } catch (Exception e) {
            Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    private void SaveAndUpdate() {
        txtempty();

        if (a) {
            return;
        }
        AddProductDetails();
    }
}
