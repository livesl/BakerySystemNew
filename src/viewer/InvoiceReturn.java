/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer;

import com.CalMaster;
import com.Messages;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import model.db;

/**
 *
 * @author LasithaRanawaka
 */
public class InvoiceReturn extends javax.swing.JFrame {

    int invoiceid = 0;

    /**
     * Creates new form ginPart3
     */
    public InvoiceReturn() {
        initComponents();
    }

    public InvoiceReturn(int id) {

        this.invoiceid = id;
        initComponents();
        FirstLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_GinPart3 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_Total = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtx_GrandTotal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_ReturnTotal = new javax.swing.JTextField();
        btn_Submit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cmb_Types = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Return Goods");

        tbl_GinPart3.setBackground(new java.awt.Color(153, 255, 153));
        tbl_GinPart3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "In.ID", "Item ID", "Item Name", "Sell", "Discount", "Total", "Qty", "Return Qty", "Return Tot"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_GinPart3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl_GinPart3KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_GinPart3);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Total");

        txt_Total.setEditable(false);
        txt_Total.setText("0.0");

        jLabel2.setText("Grand Total");

        txtx_GrandTotal.setEditable(false);
        txtx_GrandTotal.setText("0.0");

        jLabel3.setText("Return Total");

        txt_ReturnTotal.setEditable(false);
        txt_ReturnTotal.setText("0.0");

        btn_Submit.setText("Submit");
        btn_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SubmitActionPerformed(evt);
            }
        });

        jLabel10.setText("Type");

        cmb_Types.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmb_TypesKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(cmb_Types, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btn_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_Total, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(txt_ReturnTotal)
                    .addComponent(txtx_GrandTotal))
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_Total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_ReturnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtx_GrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(cmb_Types, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btn_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1089, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbl_GinPart3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_GinPart3KeyPressed
        if (evt.getKeyCode() == 10) {
            CalReturnTotal();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_GinPart3KeyPressed

    private void btn_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SubmitActionPerformed
        if (tbl_GinPart3.getRowCount() != 0 && cmb_Types.getSelectedIndex() != 0) {

            if (isNotHaveAnyEmptyFeilds()) {
                if (CkeckWantedData()) {
                    UpdateRetGin();
                }

            }


        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_SubmitActionPerformed

    private void cmb_TypesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmb_TypesKeyPressed
        if (evt.getKeyCode() == 10) {
            if (cmb_Types.getSelectedIndex() != 0 && !txt_Total.getText().isEmpty()) {
                btn_Submit.grabFocus();

            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_TypesKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InvoiceReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InvoiceReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InvoiceReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InvoiceReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InvoiceReturn().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Submit;
    private javax.swing.JComboBox cmb_Types;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_GinPart3;
    private javax.swing.JTextField txt_ReturnTotal;
    private javax.swing.JTextField txt_Total;
    private javax.swing.JTextField txtx_GrandTotal;
    // End of variables declaration//GEN-END:variables

    private void FirstLoad() {
        LoadAllData();
        LoadTypes();

    }

    private void LoadAllData() {

        try {

            if (invoiceid != 0) {
                DefaultTableModel dtm = (DefaultTableModel) tbl_GinPart3.getModel();
                dtm.setRowCount(0);

                try {

                    ResultSet rs = model.db.fetch("SELECT\n"
                            + "gin.ginreg_id,\n"
                            + "gin.items_id,\n"
                            + "items.`name`,\n"
                            + "gin.cost,\n"
                            + "gin.sell,\n"
                            + "gin.disount,\n"
                            + "gin.qty,\n"
                            + "gin.tot,\n"
                            + "gin.ret_qty\n"
                            + "\n"
                            + "FROM\n"
                            + "gin ,\n"
                            + "items\n"
                            + "WHERE\n"
                            + "gin.items_id = items.id AND\n"
                            + "gin.ginreg_id = '" + invoiceid + "'");

                    while (rs.next()) {
                        String id = rs.getString(1);
                        String itemid = rs.getString(2);
                        String itemname = rs.getString(3);

                        double cost = Double.parseDouble(rs.getString(4));
                        double sell = Double.parseDouble(rs.getString(5));
                        double discount = Double.parseDouble(rs.getString(6));
                        double qty = Double.parseDouble(rs.getString(7));
                        double total = Double.parseDouble(rs.getString(8));
                        double ret_qty = 0.0;
                        double finaltotal = 0.0;


                        Object arr[] = {id, itemid, itemname, sell, discount, total, qty, ret_qty, finaltotal};
                        dtm.addRow(arr);
                    }

                    SetAllTotal();

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }



        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void SetAllTotal() {

        try {

            ResultSet rs = model.db.fetch("SELECT\n"
                    + "ginreg.total\n"
                    + "FROM\n"
                    + "ginreg\n"
                    + "WHERE\n"
                    + "ginreg.id = '" + invoiceid + "'");

            if (rs.next()) {
                txt_Total.setText(rs.getString(1));
            }


        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void CalReturnTotal() {

        String value = tbl_GinPart3.getValueAt(tbl_GinPart3.getSelectedRow(), 7).toString();

        if (tbl_GinPart3.getRowCount() != 0 && !value.equals("")) {



            double sell = Double.parseDouble(tbl_GinPart3.getValueAt(tbl_GinPart3.getSelectedRow(), 3).toString());
            double discount = Double.parseDouble(tbl_GinPart3.getValueAt(tbl_GinPart3.getSelectedRow(), 4).toString());
            double qty = Double.parseDouble(tbl_GinPart3.getValueAt(tbl_GinPart3.getSelectedRow(), 6).toString());
            double ret_qty = Double.parseDouble(tbl_GinPart3.getValueAt(tbl_GinPart3.getSelectedRow(), 7).toString());

            if (ret_qty <= qty) {
                double ret_tot = CalMaster.DiscountPrecent(discount, sell) * ret_qty;

                tbl_GinPart3.setValueAt(ret_tot, tbl_GinPart3.getSelectedRow(), 8);

                CalAllTableItemsTot();
            } else {

                Messages.errorjoption(" You Have Entered Over Qty ! ");
                tbl_GinPart3.setValueAt("0.0", tbl_GinPart3.getSelectedRow(), 7);

            }


        }


    }

    private void CalAllTableItemsTot() {

        try {

            double amounttot = 0.0; // get amout of table content

            for (int i = 0; i < tbl_GinPart3.getRowCount(); i++) {
                amounttot += Double.parseDouble(tbl_GinPart3.getValueAt(i, 8).toString());
                txt_ReturnTotal.setText("" + amounttot);
            }

            double total = Double.parseDouble(txt_Total.getText());
            double allbalance = total - amounttot;

            txtx_GrandTotal.setText("" + allbalance);


        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void UpdateRetGin() {

        if (txt_ReturnTotal.getText().equals("0.0")) {
            txtx_GrandTotal.setText(txt_Total.getText());
        }
        try {
            db.change("Update ginreg set  ret_tot=ret_tot+'" + txt_ReturnTotal.getText().trim() + "',grand_tot=grand_tot+'" + txtx_GrandTotal.getText() + "',ret_time='" + today() + "',status='1',type='" + cmb_Types.getSelectedIndex() + "'  where id='" + invoiceid + "'");
        } catch (Exception e) {
            e.printStackTrace();
        }

        boolean bol = true;
        try {

            for (int i = 0; i < tbl_GinPart3.getRowCount(); i++) {


                double ret_qty = Double.parseDouble(tbl_GinPart3.getValueAt(i, 7).toString());
                int itemid = Integer.parseInt(tbl_GinPart3.getValueAt(i, 1).toString());

                db.change("Update gin set  ret_qty=ret_qty+'" + ret_qty + "' where  ginreg_id='" + invoiceid + "' and items_id='" + itemid + "' ");




            }


        } catch (Exception e) {
            bol = false;
            e.printStackTrace();
        }

        if (bol) {
            Messages.datasaved();
            this.dispose();
            InvoiceTempView.LoadAllPendinghs();
        }



    }

    private void LoadTypes() {
        DefaultComboBoxModel dcbm = (DefaultComboBoxModel) cmb_Types.getModel();
        dcbm.removeAllElements();

        dcbm.addElement("--Select--");
        dcbm.addElement("Credit");
        dcbm.addElement("Cash");
       // dcbm.addElement("Cheque");

        SelectTyep();
    }

    private static String today() {
        Date datenow = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");

        return sdf.format(datenow);


    }

    private void SelectTyep() {

        try {

            ResultSet rs = model.db.fetch("SELECT\n"
                    + "ginreg.type\n"
                    + "FROM\n"
                    + "ginreg\n"
                    + "WHERE\n"
                    + "ginreg.id = '" + invoiceid + "'");

            if (rs.next()) {
                cmb_Types.setSelectedIndex(Integer.parseInt(rs.getString(1)));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }



    }

    private boolean isNotHaveAnyEmptyFeilds() {

        boolean bol = true;

        for (int i = 0; i < tbl_GinPart3.getRowCount(); i++) {
            String retqty = tbl_GinPart3.getValueAt(i, 7).toString();
            if (retqty.isEmpty()) {
                bol = false;
                Messages.errorjoption("Please Check Empty Feilds ! ");
                break;
            }
        }

        return bol;
    }

    private boolean CkeckWantedData() {
        boolean bol = true;
        try {


            for (int i = 0; i < tbl_GinPart3.getRowCount(); i++) {
                double retqty = Double.parseDouble(tbl_GinPart3.getValueAt(i, 7).toString());
                double rettot = Double.parseDouble(tbl_GinPart3.getValueAt(i, 8).toString());

                if (retqty >= 0 && rettot == 0) {
                    bol = false;
                    Messages.errorjoption("Error Occur! Check about Entered Data  ");
                    break;
                }
            }


        } catch (Exception e) {
            e.printStackTrace();
        }
        return bol;
    }
}
