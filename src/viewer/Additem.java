/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewer;

import com.Messages;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.db;

/**
 *
 * @author Lasitha Ranawaka
 */
public class Additem extends javax.swing.JPanel {

    /**
     * Creates new form additem
     */
    public Additem() {
        initComponents();
        txtname.grabFocus();
        txtcostprice.setText("0.0");
        txtsellingprice.setText("0.0");
        loadtable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblitem = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtid = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtcostprice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtsellingprice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cmbStatus = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 204));
        setPreferredSize(new java.awt.Dimension(1026, 650));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Item Details");

        tblitem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Name", "Cost Price", "Selling Price", "Item Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblitem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblitemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblitem);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Item ID");

        txtid.setEditable(false);

        jLabel3.setText("Item Name");

        txtname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnameKeyPressed(evt);
            }
        });

        jLabel4.setText("Cost Price");

        txtcostprice.setText("0.0");
        txtcostprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcostpriceActionPerformed(evt);
            }
        });
        txtcostprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtcostpriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcostpriceKeyReleased(evt);
            }
        });

        jLabel5.setText("Selling Price");

        txtsellingprice.setText("0.0");
        txtsellingprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtsellingpriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsellingpriceKeyReleased(evt);
            }
        });

        jLabel6.setText("Item Status");

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Active", "Deactive" }));
        cmbStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbStatusKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtcostprice, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtsellingprice, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtcostprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtsellingprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(81, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        txtempty();

        if (a) {
            return;
        }
        additemdetails();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblitemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblitemMouseClicked
        if (evt.getClickCount() == 1) {
            DefaultTableModel dtm = (DefaultTableModel) tblitem.getModel();

            txtid.setText(dtm.getValueAt(tblitem.getSelectedRow(), 0).toString());
            txtid.setEnabled(false);
            txtname.setText(dtm.getValueAt(tblitem.getSelectedRow(), 1).toString());
            txtcostprice.setText(dtm.getValueAt(tblitem.getSelectedRow(), 2).toString());
            txtsellingprice.setText(String.valueOf(dtm.getValueAt(tblitem.getSelectedRow(), 3).toString()));
            cmbStatus.setSelectedItem(String.valueOf(dtm.getValueAt(tblitem.getSelectedRow(), 4).toString()));

        }
    }//GEN-LAST:event_tblitemMouseClicked

    private void txtnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnameKeyPressed
        if (evt.getKeyCode() == 10) {
            txtcostprice.grabFocus();
            txtcostprice.selectAll();
        }
    }//GEN-LAST:event_txtnameKeyPressed

    private void txtcostpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcostpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtcostpriceActionPerformed

    private void txtcostpriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcostpriceKeyPressed
        if (evt.getKeyCode() == 10) {
            txtsellingprice.grabFocus();
            txtsellingprice.selectAll();
        }
    }//GEN-LAST:event_txtcostpriceKeyPressed

    private void txtsellingpriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsellingpriceKeyPressed
        if (evt.getKeyCode() == 10) {
            cmbStatus.grabFocus();
        }
    }//GEN-LAST:event_txtsellingpriceKeyPressed

    private void cmbStatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbStatusKeyPressed
        if (evt.getKeyCode() == 10) {
            txtempty();
            if (a) {
                return;
            }
            additemdetails();
        }
    }//GEN-LAST:event_cmbStatusKeyPressed

    private void txtcostpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcostpriceKeyReleased
        com.Validation.validatedouble(txtcostprice);
    }//GEN-LAST:event_txtcostpriceKeyReleased

    private void txtsellingpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsellingpriceKeyReleased
        com.Validation.validatedouble(txtsellingprice);
    }//GEN-LAST:event_txtsellingpriceKeyReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblitem;
    private javax.swing.JTextField txtcostprice;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtsellingprice;
    // End of variables declaration//GEN-END:variables
    boolean a;

    private void txtempty() {

        if (txtname.getText().trim().isEmpty()) {

            JOptionPane.showMessageDialog(null, "Enter Item Name");
            a = true;
            txtname.grabFocus();

        } else {
            a = false;
        }
    }

    private void additemdetails() {
        int Active = cmbStatus.getSelectedIndex();

        if (txtid.getText().isEmpty()) {

            try {
                db.change("insert into items(name,cost,sell,status) "
                        + "value('" + txtname.getText() + "','" + txtcostprice.getText() + "','" + txtsellingprice.getText() + "','" + Active + "')");

            } catch (Exception e) {
                e.printStackTrace();
            }
            Messages.datasaved();
            cleartext();
            txtname.grabFocus();
            loadtable();
        } else {
            try {
                db.change("update  items set name= '" + txtname.getText() + "',"
                        + "cost='" + txtcostprice.getText() + "',"
                        + "sell='" + txtsellingprice.getText() + "',status='" + Active + "' "
                        + " where id='" + txtid.getText() + "'");

            } catch (Exception e) {
                e.printStackTrace();
            }
            Messages.dataupdated();
            cleartext();

            txtname.grabFocus();
            loadtable();
        }
    }

    private void cleartext() {
        txtid.setText("");
        txtname.setText("");
        txtcostprice.setText("0.0");
        txtsellingprice.setText("0.0");

    }

    private void loadtable() {
        try {
            DefaultTableModel dtm = (DefaultTableModel) tblitem.getModel();
            ResultSet rs = db.fetch("SELECT\n"
                    + "items.id,\n"
                    + "items.`name`,\n"
                    + "items.cost,\n"
                    + "items.sell,\n"
                    + "items.`status`\n"
                    + "FROM\n"
                    + "items\n"
                    + "ORDER BY\n"
                    + "items.id ASC");

            dtm.setRowCount(rs.getRow());
            while (rs.next()) {
                int id = rs.getInt(1);
                String name = rs.getString(2);
                double costPrice = rs.getDouble(3);
                double sellprice = rs.getDouble(4);

                int status = rs.getInt(5);
                String sta = null;
                if (status == 0) {
                    sta = "Active";
                } else if (status == 1) {
                    sta = "Deactive";

                }

                Object[] ar = {id, name, costPrice, sellprice, sta};
                dtm.addRow(ar);
            }

        } catch (Exception e) {
            Logger.getLogger(Additem.class.getName()).log(Level.SEVERE, null, e);
        }
    }
}
